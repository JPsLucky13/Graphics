#version 330 core

layout (location = 0) in vec3 Position;
layout (location = 1) in vec3 Normal;
layout (location = 2) in vec2 TexCoord;

uniform mat4 mvp;
uniform mat3 inverseCM;
uniform mat4 modelMatrix;
uniform mat4 viewMatrix;

out vec3 o_VertexPos;
out vec3 o_Normal;
out vec3 o_NormalCameraSpace;
out vec2 o_TexCoord0;
out vec2 o_TexCoord1;

void main()
{
	gl_Position = mvp * vec4(Position, 1.0);
	mat4 modelViewMatrix = viewMatrix * modelMatrix;
	o_VertexPos = vec3(modelViewMatrix * vec4(Position,1.0));
	o_Normal = inverseCM * Normal;
	o_NormalCameraSpace = transpose(inverse(mat3(modelViewMatrix))) * Normal;
	o_TexCoord0 = TexCoord;
	o_TexCoord1 = TexCoord;
}
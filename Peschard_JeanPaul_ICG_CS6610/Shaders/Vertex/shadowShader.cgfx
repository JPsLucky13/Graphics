#version 330 core

layout (location = 0) in vec3 Position;
layout (location = 1) in vec3 Normal;

out vec3 pos_eye;
out vec3 n_eye;

uniform mat4 lightSpaceMatrix;
uniform mat4 mvp;
uniform mat3 inverseCM;
uniform mat4 modelMatrix;
uniform mat4 viewMatrix;

out vec4 lightSpacePosition;
out vec3 o_VertexPos;
out vec3 o_FragPos;
out vec3 o_Normal;
out vec3 o_NormalCameraSpace;

void main()
{
	mat4 modelViewMatrix = viewMatrix * modelMatrix;
	o_VertexPos = vec3(modelViewMatrix * vec4(Position,1.0));
	o_FragPos = vec3(modelMatrix * vec4(Position,1.0));
	o_Normal = transpose(inverse(mat3(modelMatrix))) * Normal;
	o_NormalCameraSpace = transpose(inverse(mat3(modelViewMatrix))) * Normal;
	lightSpacePosition = lightSpaceMatrix * modelMatrix * vec4(Position,1.0);
	gl_Position = mvp * vec4(Position, 1.0);

}
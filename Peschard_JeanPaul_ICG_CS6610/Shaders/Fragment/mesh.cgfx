#version 330

out vec4 FragColor;

in vec3 o_VertexPos;
in vec3 o_Normal;
in vec3 o_NormalWorld;
in vec3 o_LightPos;
in vec3 o_ViewerPos;

vec3 diffuse = vec3(1.0,0.0,0.0);
vec3 ambient = vec3(0.2,0.0,0.0);
vec3 specular = vec3(1.0,1.0,1.0);
float alpha = 50;

void main()
{

	vec3 normalizedNormal = normalize(o_NormalWorld);
	vec3 lightVector = normalize(o_LightPos - o_VertexPos);
	vec3 viewerVector = normalize (o_ViewerPos - o_VertexPos);

	vec3 half = normalize(lightVector + viewerVector);
	vec3 o_Light = (clamp(dot(lightVector,normalizedNormal),0.0,1.0) * diffuse) + specular *  pow(clamp(dot(half,normalizedNormal),0.0,1.0),alpha) + ambient;
	
	FragColor = vec4(o_Light,1.0);

}